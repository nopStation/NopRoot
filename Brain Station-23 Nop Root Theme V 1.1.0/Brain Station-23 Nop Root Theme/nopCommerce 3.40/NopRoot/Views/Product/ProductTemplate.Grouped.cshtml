@model ProductDetailsModel
@using Nop.Core
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Services.Localization;
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title, meta
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var seoSettings = EngineContext.Current.Resolve<SeoSettings>();
    
    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(storeName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
    }
    
}
<!--product breadcrumb-->
@Html.Partial("_ProductBreadcrumb", Model.Breadcrumb)
<div class="page product-details-page panel panel-default form-panel">
    <div class="panel-heading"><h3>@Model.Name</h3></div>
    <div class="panel-body">
        @Html.Widget("productdetails_top")
        @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
        {
            <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                <div class="product-essential">
                    @Html.Widget("productdetails_before_pictures")
                    <!--product pictures-->
                    <div class="col-md-6">
                        @Html.Partial("_ProductDetailsPictures", Model)
                        @Html.Widget("productdetails_after_pictures")
                    </div>
                    <div class="col-md-6 overview">
                        @*<div class="product-name">
                            <h1 itemprop="name">
                                @Model.Name
                            </h1>
                        </div>*@
                        @if (!String.IsNullOrEmpty(Model.ShortDescription))
                        {
                            <div class="short-description">
                                @Html.Raw(Model.ShortDescription)
                            </div>
                        }
                        @Html.Widget("productdetails_overview_top")
                        <!--product manufacturers-->
                        @Html.Partial("_ProductManufacturers", Model.ProductManufacturers)
                        <!--product reviews-->
                        @Html.Partial("_ProductReviewOverview", Model.ProductReviewOverview)
                        @Html.Partial("_ProductEmailAFriendButton", Model)
                        
                        @Html.Partial("_CompareProductsButton", Model)
                        @Html.Partial("_ShareButton", Model)
                        @Html.Widget("productdetails_overview_bottom")
                    </div>




                    @if (!String.IsNullOrEmpty(Model.FullDescription))
                    {
                        <div class="full-description" itemprop="description">
                            @Html.Raw(Model.FullDescription)
                        </div>
                    }
                </div>



                @Html.Widget("productdetails_before_collateral")
                
                <div class="product-collateral">
                    <!--associated products-->
                    <div class="product-variant-list">
                        @{
                            var new_i = 0;
                        }
                        @foreach (var variant in Model.AssociatedProducts)
                        {
                            if(new_i%2==0)
                            {
                                @:<div class="row">
                            }
                            
                            <div class="product-variant-line col-md-6" data-productid="@variant.Id">
                                @if (!String.IsNullOrWhiteSpace(variant.DefaultPictureModel.ImageUrl))
                                {
                                    <div class="variant-picture">
                                        <img alt="@variant.DefaultPictureModel.AlternateText" src="@variant.DefaultPictureModel.ImageUrl"
                                             title="@variant.DefaultPictureModel.Title" id="main-product-img-@variant.Id" />
                                    </div>
                                }
                                <div class="variant-overview">
                                    @if (!String.IsNullOrWhiteSpace(variant.Name))
                                    {
                                        <div class="variant-name">
                                            @variant.Name
                                        </div>
                                    }
                                    @if (!String.IsNullOrWhiteSpace(variant.ShortDescription))
                                    {
                                        <div class="variant-description">
                                            @Html.Raw(variant.ShortDescription)
                                        </div>
                                    }
                                    @Html.Partial("_DownloadSample", variant)
                                    @Html.Partial("_ProductTierPrices", variant.TierPrices)
                                    @{
                                        var dataDictAttributes = new ViewDataDictionary();
                                        dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", variant.Id);
                                        @Html.Partial("_ProductAttributes", variant.ProductVariantAttributes, dataDictAttributes)                  
                                    }
                                    <!--product SKU, manufacturer part number, stock info-->
                                    @Html.Partial("_SKU_Man_Stock", variant)
                                    <!--Back in stock subscription-->
                                    @Html.Partial("_BackInStockSubscription", variant)
                                    @{
                                        var dataDictGiftCard = new ViewDataDictionary();
                                        dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", variant.Id);
                                        @Html.Partial("_GiftCardInfo", variant.GiftCard, dataDictGiftCard)
                                    }
                                    @{
                                        var dataDictPrice = new ViewDataDictionary();
                                        dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", variant.Id);
                                        @Html.Partial("_ProductPrice", variant.ProductPrice, dataDictPrice)
                                    }
                                    @{
                                        var dataDictAddToCart = new ViewDataDictionary();
                                        dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", variant.Id);
                                        @Html.Partial("_AddToCart", variant.AddToCart, dataDictAddToCart)
                                    }
                                </div>
                            </div>
                            if(new_i%2==1)
                            {
                                @:</div>
                            }
                            new_i++;
                        }
                        @if(new_i%2!=0)
                            {
                                @:</div>
                            }
                        @if (Model.AssociatedProducts.Count == 0)
                        {
                            <div class="no-associated-products">
                                @T("Products.NoAssociatedProducts")
                            </div>
                        }
                    </div>
                    @Html.Partial("_ProductSpecifications", Model.ProductSpecifications)
                    @Html.Partial("_ProductTags", Model.ProductTags)
                </div>
                
            </div>

        }
        @Html.Widget("productdetails_bottom")
    </div>
</div>

                        @Html.Action("ProductsAlsoPurchased", "Product", new { productId = Model.Id })
                       @Html.Action("RelatedProducts", "Product", new { productId = Model.Id })